{"version":3,"sources":["services/httpService.js","services/getBaseURL.js","services/genreService.js","services/movieService.js","components/common/pagination.js","components/common/listGroup.js","components/common/tableHeader.js","components/common/tableBody.js","components/common/table.js","components/moviesTable.js","components/common/searchBox.js","components/movies.js","components/common/formInput.js","components/common/formSelect.js","components/common/form.js","services/customerService.js","components/customersForm.js","components/rentalsTable.js","services/rentalService.js","components/rentals.js","components/rentalsForm.js","services/returnService.js","components/returnsForm.js","components/navbar.js","components/notFound.js","services/authService.js","components/loginForm.js","services/userService.js","components/registerForm.js","components/logout.js","components/moviesForm.js","components/common/protectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","response","use","error","status","console","log","alert","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","defaults","headers","common","PROD_BASE_URL","getBaseURL","GENRES_URL","concat","getGenres","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref2","data","wrap","_context","prev","next","http","sent","abrupt","stop","this","apply","arguments","MOVIE_URL","getMovies","getOneMovie","_ref3","_callee2","movieId","_ref4","_context2","_x","saveMovie","_ref5","_callee3","movie","body","_ref6","_data","_ref7","_context3","_id","objectSpread","_x2","deleteMovie","_ref8","_callee4","_context4","_x3","Pagination","renderPages","_this$props","_this","props","itemCount","pageSize","currentPage","totalPages","Math","ceil","_","range","map","page","react_default","createElement","className","key","onClick","onPageChange","aria-label","Component","ListGroup","displayData","selectedItem","onSelectItem","item","name","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","_this2","columns","label","TableBody","renderCell","content","createKey","length","Table","tableHeader","tableBody","MovieTable","generateColumns","user","onDelete","Link","to","pathname","isAdmin","push","_this$props2","movies","table","SearchBox","value","onChange","placeholder","type","e","currentTarget","Movies","state","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","m","setState","t0","handlePageChange","handleSelectGenre","genre","handleSort","paginate","startIndex","slice","take","filterMoviesByGenre","getPagedData","_this$state","allMovies","filteredMovies","toLowerCase","startsWith","sortedMovies","orderBy","handleSearch","query","_this$state2","_this$getPagedData","listGroup","searchBox","moviesTable","pagination","FormInput","htmlFor","id","FormSelect","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateField","input","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","errorMessage","renderButton","disabled","renderFormInput","formInput","renderFormSelect","formSelect","CUSTOMERS_URL","getAllCustomers","saveCustomer","customer","CustomerForm","email","phone","string","min","max","required","minDomainAtoms","history","replace","onSubmit","RentalTable","rentals","rental","moment","dateRented","format","formatDateRented","dateReturned","processReturns","RENTALS_URL","getAllRentals","saveRental","Rentals","allRentals","filteredRentals","sortedRentals","rentalsTable","RentalForm","customerEmail","mapToViewModel","populateMovies","location","customers","_errors","find","Error","customerId","RETURNS_URL","saveReturn","returnRental","ReturnForm","populateReturnForm","NavBar","renderNavLink","links","username","link","NavLink","aria-hidden","data-toggle","data-target","aria-controls","aria-expanded","NotFound","AUTH_URL","tokenKey","localStorage","getItem","authService","loginUser","password","setItem","logoutUser","removeItem","getCurrentUser","jwtDecode","loginWithJwt","LoginForm","auth","window","from","Redirect","USERS_URL","registerUser","RegisterForm","Logout","MovieForm","genreId","numberInStock","dailyRentalRate","number","populateGenres","populateMovie","defaultData","match","params","ProtectedRoute","component","rest","objectWithoutProperties","Route","assign","render","App","Fragment","navbar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3937fbfc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"Unexpected error occurs\", error);\r\n    alert(\"An unexpected error occured\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\n// called in authService.js to set headers to http requests before any http request is made\r\nconst setJwt = jwt => {\r\n  if (jwt) {\r\n    // set default header for every request\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n  }\r\n};\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","const DEV_BASE_URL = \"http://localhost:5000/api\";\r\nconst PROD_BASE_URL = \"http://store.banvuong.com/api\";\r\n\r\nexport function getBaseURL() {\r\n  return PROD_BASE_URL;\r\n}\r\n","import http from \"./httpService\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst GENRES_URL = `${getBaseURL()}/genres`;\r\n\r\nconst getGenres = async () => {\r\n  const { data } = await http.get(GENRES_URL);\r\n  console.log(\"Genres fetched\\n\", data);\r\n  return data;\r\n};\r\n\r\nexport { getGenres };\r\n","import http from \"./httpService\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst MOVIE_URL = `${getBaseURL()}/movies`;\r\n\r\nconst getMovies = async () => {\r\n  const { data } = await http.get(MOVIE_URL);\r\n  console.log(\"Movies fetched\\n\", data);\r\n  return data;\r\n};\r\n\r\nconst getOneMovie = async movieId => {\r\n  const { data } = await http.get(MOVIE_URL + \"/\" + movieId);\r\n  console.log(\"Movie fetched\\n\", data);\r\n  return data;\r\n};\r\n\r\nconst saveMovie = async movie => {\r\n  if (movie._id) {\r\n    // passed in by state, hence if delete ._id directly, state will also be affected => clone it first\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    const { data } = await http.put(MOVIE_URL + \"/\" + movie._id, body);\r\n    console.log(\"Movie updated\", data);\r\n    return data;\r\n  }\r\n  const { data } = await http.post(MOVIE_URL, movie);\r\n  console.log(\"Movie created\", data);\r\n  return data;\r\n};\r\n\r\nconst deleteMovie = async movieId => {\r\n  return http.delete(MOVIE_URL + \"/\" + movieId);\r\n};\r\n\r\nexport { getOneMovie, getMovies, deleteMovie, saveMovie };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nclass Pagination extends Component {\r\n  renderPages = () => {\r\n    const { itemCount, pageSize, currentPage } = this.props;\r\n    const totalPages = Math.ceil(itemCount / pageSize);\r\n    const pages = _.range(1, totalPages + 1);\r\n    return pages.map(page => {\r\n      return (\r\n        <li\r\n          className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          key={page}\r\n        >\r\n          <div\r\n            className=\"page-link\"\r\n            onClick={() => this.props.onPageChange(page)}\r\n          >\r\n            {page}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">{this.renderPages()}</ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListGroup extends Component {\r\n  displayData = () => {\r\n    const { data, selectedItem, onSelectItem } = this.props;\r\n    return data.map(item => {\r\n      return (\r\n        <li\r\n          className={\r\n            item === selectedItem\r\n              ? \"list-group-item active clickable\"\r\n              : \"list-group-item clickable\"\r\n          }\r\n          key={item._id}\r\n          onClick={() => onSelectItem(item)}\r\n        >\r\n          {item.name}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group\">{this.displayData()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    // toggling between asc and desc order (check to see if current selected column is same or not, if same then toggle, else sort by ascending order)\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    else return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.length\r\n          ? data.map(item => (\r\n              <tr key={item._id}>\r\n                {columns.map(column => (\r\n                  <td key={this.createKey(item, column)}>\r\n                    {this.renderCell(item, column)}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          : null}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { data, columns, onSort, sortColumn } = this.props;\r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          onSort={onSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n        <TableBody data={data} columns={columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MovieTable extends Component {\r\n  // define path for _.orderBy in movies.js. The paths are the fields of movie object passed in orderBy\r\n  generateColumns = () => {\r\n    const { user, onDelete } = this.props;\r\n    const columns = [\r\n      {\r\n        label: \"Name\",\r\n        path: \"name\",\r\n        content: movie => (\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${movie._id}`\r\n            }}\r\n          >\r\n            {movie.name}\r\n          </Link>\r\n        )\r\n      },\r\n      { label: \"Genre\", path: \"genre.name\" },\r\n      { label: \"Stock\", path: \"numberInStock\" },\r\n      { label: \"Rate\", path: \"dailyRentalRate\" }\r\n    ];\r\n\r\n    if (user && user.isAdmin) {\r\n      columns.push({\r\n        key: \"delete\",\r\n        content: movie => (\r\n          <button\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => onDelete(movie)}\r\n          >\r\n            Delete\r\n          </button>\r\n        )\r\n      });\r\n    }\r\n    return columns;\r\n  };\r\n\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        columns={this.generateColumns()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = props => {\r\n  const { value, onChange, placeholder } = props;\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MovieTable from \"./moviesTable\";\r\nimport SearchBox from \"./common/searchBox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 3, // number of movies per page\r\n    currentPage: 1,\r\n\r\n    genres: [],\r\n    selectedGenre: {},\r\n\r\n    sortColumn: { path: \"name\", order: \"asc\" },\r\n\r\n    searchQuery: \"\"\r\n  };\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({\r\n      movies\r\n    });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        alert(\"Movie already been deleted\");\r\n      else if (ex.response && ex.response.status === 401)\r\n        alert(\"Unauthorized! Please Login\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSelectGenre = genre => {\r\n    this.setState({\r\n      selectedGenre: genre,\r\n      currentPage: 1,\r\n      searchQuery: \"\"\r\n    });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  paginate = (movies, pageSize, currentPage) => {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const currentMovies = _(movies) // turn movies into lodash wrapper object\r\n      .slice(startIndex)\r\n      .take(pageSize)\r\n      .value(); // convert lodash wrapper object back into normal array\r\n    return currentMovies;\r\n  };\r\n\r\n  filterMoviesByGenre = (selectedGenre, movies) => {\r\n    const filteredMovies = selectedGenre._id\r\n      ? movies.filter(m => m.genre._id === selectedGenre._id)\r\n      : movies;\r\n    return filteredMovies;\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      searchQuery\r\n    } = this.state;\r\n\r\n    // filter by searchQuery OR by selectedGenre\r\n    let filteredMovies = allMovies;\r\n    if (searchQuery) {\r\n      filteredMovies = allMovies.filter(m =>\r\n        m.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filteredMovies = this.filterMoviesByGenre(selectedGenre, allMovies);\r\n    }\r\n\r\n    // Sorting movies\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    // Movies on each page after filtered and sorted(depends on pageSize)\r\n    const movies = this.paginate(sortedMovies, pageSize, currentPage);\r\n    return { movies, itemCount: filteredMovies.length };\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: {}, currentPage: 1 });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movies = await getMovies();\r\n    const data = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movies: allMovies,\r\n      genres,\r\n      selectedGenre,\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    const { movies, itemCount } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <ListGroup\r\n              data={genres}\r\n              selectedItem={selectedGenre}\r\n              onSelectItem={this.handleSelectGenre}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-9\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8\">\r\n                {allMovies.length === 0 ? (\r\n                  <p>There are no movies currently</p>\r\n                ) : (\r\n                  <p>There are {allMovies.length} movies in the Database</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <Link to=\"/movies/new\" className=\"btn btn-primary\">\r\n                  New\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8\">\r\n                <SearchBox\r\n                  value={this.state.searchQuery}\r\n                  onChange={this.handleSearch}\r\n                  placeholder=\"Search Movie\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <MovieTable\r\n                movies={movies}\r\n                onDelete={this.handleDelete}\r\n                onSort={this.handleSort}\r\n                sortColumn={sortColumn}\r\n                user={user}\r\n              />\r\n\r\n              <Pagination\r\n                itemCount={itemCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChange={this.handlePageChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst FormInput = props => {\r\n  const { name, label, value, onChange, type, placeholder, error } = props;\r\n\r\n  return (\r\n    <div className=\"form-group row\">\r\n      <label htmlFor={name} className=\"col-sm-2 col-form-label\">\r\n        {label}\r\n      </label>\r\n      <div className=\"col-sm-5\">\r\n        <input\r\n          value={value}\r\n          onChange={onChange}\r\n          name={name}\r\n          id={name}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          className=\"form-control\"\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\n\r\nconst FormSelect = props => {\r\n  const { name, value, label, options, error, onChange } = props;\r\n\r\n  const renderOptions = () => {\r\n    return (\r\n      options &&\r\n      options.map(option => (\r\n        <option key={option._id} value={option._id}>\r\n          {option.name}\r\n        </option>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group row\">\r\n      <label htmlFor={name} className=\"col-sm-2 col-form-label\">\r\n        {label}\r\n      </label>\r\n      <div className=\"col-sm-5\">\r\n        <select\r\n          className=\"form-control\"\r\n          name={name}\r\n          id={name}\r\n          onChange={onChange}\r\n          value={value}\r\n        >\r\n          {renderOptions()}\r\n        </select>\r\n      </div>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport FormInput from \"./formInput\";\r\nimport FormSelect from \"./formSelect\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    // console.log(\"Error in validate\\n\", errors);\r\n    return errors;\r\n  };\r\n\r\n  validateField = input => {\r\n    const { name, value } = input; // name and value property of the current html element\r\n    const obj = { [name]: value }; // es6 computed property, this is a short hand for obj[name] = value\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n\r\n    if (!error) return null;\r\n    // console.log(\"Error validate Field\\n\", error);\r\n    return error.details[0].message;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = e => {\r\n    const errors = { ...this.state.errors };\r\n    // currentTarget is the current input element/field/property of the form\r\n    const { currentTarget } = e;\r\n    const errorMessage = this.validateField(currentTarget);\r\n    if (errorMessage) errors[currentTarget.name] = errorMessage;\r\n    else delete errors[currentTarget.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[currentTarget.name] = currentTarget.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary \">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderFormInput = (name, label, placeholder, type) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <FormInput\r\n        name={name}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderFormSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <FormSelect\r\n        name={name}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        options={options}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst CUSTOMERS_URL = `${getBaseURL()}/customers`;\r\n\r\nconst getAllCustomers = async () => {\r\n  const { data } = await http.get(CUSTOMERS_URL);\r\n  console.log(\"Customers fetched\\n\", data);\r\n  return data;\r\n};\r\n\r\nconst saveCustomer = async customer => {\r\n  const { data } = await http.post(CUSTOMERS_URL, customer);\r\n  console.log(\"Customer created\", data);\r\n  return data;\r\n};\r\n\r\nexport { getAllCustomers, saveCustomer };\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { saveCustomer } from \"../services/customerService\";\r\n\r\nclass CustomerForm extends Form {\r\n  state = {\r\n    data: { name: \"\", email: \"\", phone: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string()\r\n      .min(5)\r\n      .max(50)\r\n      .required()\r\n      .label(\"Name\"),\r\n\r\n    email: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Email\"),\r\n\r\n    phone: Joi.string()\r\n      .min(5)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Phone\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await saveCustomer(this.state.data);\r\n      this.props.history.replace(\"/movies\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Customer</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderFormInput(\"name\", \"Name\", \"Ban Vuong\", \"text\")}\r\n          {this.renderFormInput(\"email\", \"Email\", \"MyEmail@gmail.com\", \"text\")}\r\n          {this.renderFormInput(\"phone\", \"Phone\", \"123456789\", \"text\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerForm;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\n\r\nconst RentalTable = props => {\r\n  // process the return of a movie (return rental order)\r\n  const processReturns = rental => {\r\n    if (!rental.dateReturned)\r\n      return (\r\n        <Link\r\n          to={{\r\n            pathname: `/returns`,\r\n            state: { rental }\r\n          }}\r\n        >\r\n          Return\r\n        </Link>\r\n      );\r\n    return moment(rental.dateReturned).format(\"MMMM Do YYYY, h:mm:ss a\");\r\n  };\r\n\r\n  const formatDateRented = rental => {\r\n    return moment(rental.dateRented).format(\"MMMM Do YYYY, h:mm:ss a\");\r\n  };\r\n\r\n  const generateColumns = () => {\r\n    const columns = [\r\n      { label: \"Customer\", path: \"customer.name\" },\r\n      { label: \"Movie\", path: \"movie.name\" },\r\n      {\r\n        label: \"Date Rented\",\r\n        path: \"dateRented\",\r\n        content: rental => formatDateRented(rental)\r\n      },\r\n      {\r\n        label: \"Date Returned\",\r\n        path: \"dateReturned\",\r\n        content: rental => processReturns(rental)\r\n      },\r\n      { label: \"Rental Fee\", path: \"rentalFee\" }\r\n    ];\r\n    return columns;\r\n  };\r\n\r\n  const { rentals, sortColumn, onSort } = props;\r\n  return (\r\n    <Table\r\n      data={rentals}\r\n      columns={generateColumns()}\r\n      onSort={onSort}\r\n      sortColumn={sortColumn}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RentalTable;\r\n","import http from \"./httpService\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst RENTALS_URL = `${getBaseURL()}/rentals`;\r\n\r\nconst getAllRentals = async () => {\r\n  const { data } = await http.get(RENTALS_URL);\r\n  console.log(\"Rentals fetched\\n\", data);\r\n  return data;\r\n};\r\n\r\nconst saveRental = async rental => {\r\n  const { data } = await http.post(RENTALS_URL, rental);\r\n  console.log(\"Rental created\", data);\r\n  return data;\r\n};\r\n\r\nexport { getAllRentals, saveRental };\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport RentalTable from \"./rentalsTable\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getAllRentals } from \"../services/rentalService\";\r\n\r\nclass Rentals extends Component {\r\n  state = {\r\n    rentals: [],\r\n    pageSize: 3, // number of rentals per page\r\n    currentPage: 1,\r\n\r\n    sortColumn: { path: \"customer.name\", order: \"asc\" },\r\n\r\n    searchQuery: \"\"\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: {}, currentPage: 1 });\r\n  };\r\n\r\n  paginate = (rentals, pageSize, currentPage) => {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const currentRentals = _(rentals)\r\n      .slice(startIndex)\r\n      .take(pageSize)\r\n      .value();\r\n    return currentRentals;\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      rentals: allRentals,\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      searchQuery\r\n    } = this.state;\r\n\r\n    // filter by searchQuery\r\n    let filteredRentals = allRentals;\r\n    if (searchQuery) {\r\n      filteredRentals = allRentals.filter(rental =>\r\n        rental.customer.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    const sortedRentals = _.orderBy(\r\n      filteredRentals,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    const rentals = this.paginate(sortedRentals, pageSize, currentPage);\r\n    return { rentals, itemCount: filteredRentals.length };\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const rentals = await getAllRentals();\r\n    this.setState({ rentals });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      rentals: allRentals,\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn\r\n    } = this.state;\r\n\r\n    const { rentals, itemCount } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Rentals</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <SearchBox\r\n              value={this.state.searchQuery}\r\n              onChange={this.handleSearch}\r\n              placeholder=\"Search Customer\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <RentalTable\r\n          rentals={rentals}\r\n          onSort={this.handleSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n\r\n        <Pagination\r\n          itemCount={itemCount}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport _ from \"lodash\";\r\nimport { getMovies } from \"../services/movieService\";\r\nimport { saveRental } from \"../services/rentalService\";\r\nimport { getAllCustomers } from \"../services/customerService\";\r\n\r\nclass RentalForm extends Form {\r\n  state = {\r\n    data: {\r\n      customerEmail: \"\",\r\n      movieId: \"\"\r\n    },\r\n    movies: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    customerEmail: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Customer Email\"),\r\n    movieId: Joi.string()\r\n      .required()\r\n      .label(\"Movie\")\r\n  };\r\n\r\n  mapToViewModel = movie => {\r\n    return {\r\n      customerEmail: \"\",\r\n      movieId: movie._id\r\n    };\r\n  };\r\n\r\n  populateMovies = async () => {\r\n    try {\r\n      // if /rentals/new, get All movies (show all movies in options). Set data default to the first movie\r\n      let movies = [];\r\n      movies = await getMovies();\r\n      this.setState({ movies, data: this.mapToViewModel(movies[0]) });\r\n\r\n      // get the specific movie if come from /movies/:id\r\n      if (this.props.location.state) {\r\n        const { movie } = this.props.location.state;\r\n        this.setState({ data: this.mapToViewModel(movie) });\r\n      }\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        return this.props.history.replace(\"/not-found\");\r\n    }\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      const customers = await getAllCustomers();\r\n      const customer = customers.find(customer => {\r\n        return customer.email === data.customerEmail;\r\n      });\r\n      if (!customer) {\r\n        throw new Error(\"Invalid Customer\");\r\n      }\r\n      const rental = {\r\n        customerId: customer._id,\r\n        movieId: data.movieId\r\n      };\r\n      await saveRental(rental);\r\n      this.props.history.replace(\"/rentals\");\r\n    } catch (ex) {\r\n      const { response } = ex;\r\n      if (\r\n        response &&\r\n        (response.status === 400 ||\r\n          response.status === 404 ||\r\n          response.status === 401)\r\n      ) {\r\n        const errors = { ...this.state.errors };\r\n        errors.customerEmail = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n\r\n      if (ex.message === \"Invalid Customer\") {\r\n        const errors = { ...this.state.errors };\r\n        errors.customerEmail = ex.message;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateMovies();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Rental</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderFormInput(\r\n            \"customerEmail\",\r\n            \"Email\",\r\n            \"customerEmail@gmail.com\",\r\n            \"text\"\r\n          )}\r\n          {this.renderFormSelect(\"movieId\", \"Movie\", this.state.movies)}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RentalForm;\r\n","import http from \"./httpService\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst RETURNS_URL = `${getBaseURL()}/returns`;\r\n\r\nconst saveReturn = async returnRental => {\r\n  const { data } = await http.post(RETURNS_URL, returnRental);\r\n  console.log(\"Return sucess\", data);\r\n  return data;\r\n};\r\n\r\nexport { saveReturn };\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { saveReturn } from \"../services/returnService\";\r\n\r\nclass ReturnForm extends Form {\r\n  state = {\r\n    data: {\r\n      customerEmail: \"\",\r\n      movieId: \"\"\r\n    },\r\n    movies: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    customerEmail: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Customer Email\"),\r\n    movieId: Joi.string()\r\n      .required()\r\n      .label(\"Movie\")\r\n  };\r\n\r\n  mapToViewModel = rental => {\r\n    return {\r\n      customerEmail: rental.customer.email,\r\n      movieId: rental.movie._id\r\n    };\r\n  };\r\n\r\n  populateReturnForm = () => {\r\n    // only allow acces through /rentals and click on return link on rentalsTable.js. Block access from direct /returns\r\n    if (!this.props.location.state)\r\n      return this.props.history.replace(\"/rentals\");\r\n\r\n    const { rental } = this.props.location.state;\r\n    let movies = [];\r\n    movies.push(rental.movie);\r\n    this.setState({ movies, data: this.mapToViewModel(rental) });\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { rental } = this.props.location.state;\r\n      const returnRental = {\r\n        customerId: rental.customer._id,\r\n        movieId: rental.movie._id\r\n      };\r\n      await saveReturn(returnRental);\r\n      this.props.history.replace(\"/rentals\");\r\n    } catch (ex) {\r\n      const { response } = ex;\r\n      if (\r\n        response &&\r\n        (response.status === 400 ||\r\n          response.status === 404 ||\r\n          response.status === 401)\r\n      ) {\r\n        const errors = { ...this.state.errors };\r\n        errors.customerEmail = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.populateReturnForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Return</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderFormInput(\r\n            \"customerEmail\",\r\n            \"Email\",\r\n            \"customerEmail@gmail.com\",\r\n            \"text\"\r\n          )}\r\n          {this.renderFormSelect(\"movieId\", \"Movie\", this.state.movies)}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReturnForm;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n  renderNavLink = () => {\r\n    const { user } = this.props;\r\n    const links = [\r\n      { label: \"Movies\", path: \"/movies\" },\r\n      { label: \"Customers\", path: \"/customers\" },\r\n      { label: \"Rentals\", path: \"/rentals\" }\r\n    ];\r\n\r\n    // check to see if user is logged in or not\r\n    if (!user) {\r\n      links.push(\r\n        { label: \"Login\", path: \"/login\" },\r\n        { label: \"Register\", path: \"/register\" }\r\n      );\r\n    } else {\r\n      links.push(\r\n        { label: \"Logout\", path: \"/logout\" },\r\n        { label: `${user.username}`, path: \"/profile\" }\r\n      );\r\n    }\r\n\r\n    return links.map(link => (\r\n      <li className=\"nav-item\" key={link.path}>\r\n        <NavLink className=\"nav-link\" to={link.path}>\r\n          {link.label}\r\n        </NavLink>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <i className=\"fa fa-film\" aria-hidden=\"true\" />\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">{this.renderNavLink()}</ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Not Found</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst AUTH_URL = `${getBaseURL()}/auth`;\r\nconst tokenKey = \"jwt\";\r\n\r\n// set JWT to header x-auth-token for all http request before any request is made\r\nhttp.setJwt(getJwt());\r\n\r\nconst loginUser = async user => {\r\n  // obtain jwt token\r\n  const { data } = await http.post(AUTH_URL, {\r\n    email: user.email,\r\n    password: user.password\r\n  });\r\n  localStorage.setItem(tokenKey, data);\r\n};\r\n\r\nconst loginWithJwt = jwt => {\r\n  localStorage.setItem(tokenKey, jwt);\r\n};\r\n\r\nconst logoutUser = () => {\r\n  localStorage.removeItem(tokenKey);\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  const jwt = localStorage.getItem(tokenKey);\r\n  if (jwt) {\r\n    const user = jwtDecode(jwt);\r\n    console.log(\"Current user\", user);\r\n    return user;\r\n  }\r\n  return null;\r\n};\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default { loginUser, logoutUser, getCurrentUser, loginWithJwt };\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Email\"),\r\n\r\n    password: Joi.string()\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      // data holds JWT token returned from server\r\n      await auth.loginUser(this.state.data);\r\n\r\n      // redirect to home page or previous page that require login, full-reload\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // if user is already logged in, redirect to homepage\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderFormInput(\"email\", \"Email\", \"MyEmail@gmail.com\", \"text\")}\r\n          {this.renderFormInput(\r\n            \"password\",\r\n            \"Password\",\r\n            \"enter valid password\",\r\n            \"password\"\r\n          )}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\nimport { getBaseURL } from \"./getBaseURL\";\r\n\r\nconst USERS_URL = `${getBaseURL()}/users`;\r\n\r\nconst registerUser = async user => {\r\n  return http.post(USERS_URL, {\r\n    username: user.username,\r\n    email: user.email,\r\n    password: user.password\r\n  });\r\n};\r\n\r\nexport { registerUser };\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { registerUser } from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", email: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .min(5)\r\n      .max(50)\r\n      .required()\r\n      .label(\"Username\"),\r\n\r\n    email: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Email\"),\r\n\r\n    password: Joi.string()\r\n      .min(5)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await registerUser(this.state.data);\r\n\r\n      // Loggin User upon successful register\r\n      const jwt = response.headers[\"x-auth-token\"];\r\n      auth.loginWithJwt(jwt);\r\n\r\n      // redirect to home page, full reload so App component can re-mount and re-render, allow NavBar to display current user\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      // expected error (error made by user)\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderFormInput(\"username\", \"Username\", \"bdvuong\", \"text\")}\r\n          {this.renderFormInput(\"email\", \"Email\", \"MyEmail@gmail.com\", \"text\")}\r\n          {this.renderFormInput(\r\n            \"password\",\r\n            \"Password\",\r\n            \"enter valid password\",\r\n            \"password\"\r\n          )}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logoutUser();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getOneMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  // state.data does not contain _id, when create a movie, the backend will assign the _id\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      genreId: \"\",\r\n      numberInStock: 0,\r\n      dailyRentalRate: 0\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  // Schema contains _id is optional (for when receive already existed movie)\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .min(0)\r\n      .max(255)\r\n      .required()\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(0)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  // only extract nesscessary info (ie: exclude property like __v,)\r\n  mapToViewModel = movie => {\r\n    return {\r\n      _id: movie._id,\r\n      name: movie.name,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  };\r\n\r\n  populateGenres = async () => {\r\n    const genres = await getGenres();\r\n    this.setState({ genres });\r\n  };\r\n\r\n  populateMovie = async () => {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      /** if come directly to /movies/new, set default genre to the first genre. Otherwise, if come from\r\n       * /movies/:id then populate the form based on that specific movie\r\n       */\r\n      if (movieId === \"new\") {\r\n        // genres is available because we populate genres first\r\n        console.log(movieId);\r\n        const { genres, data } = this.state;\r\n        let defaultData = { ...data };\r\n        defaultData.genreId = genres[0]._id;\r\n        this.setState({ data: defaultData });\r\n        return;\r\n      }\r\n\r\n      // if movie not found or any expected error occurs, axios interceptor from httpService will be triggered and return a Promise.reject(error) => go to catch block\r\n      const movie = await getOneMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        return this.props.history.replace(\"/not-found\");\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      // call backend service to post/put movie\r\n      await saveMovie(this.state.data);\r\n      console.log(\"Movie Submitted\");\r\n      this.props.history.replace(\"/movies\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 401)\r\n        alert(\"Unauthorized! Please Login\");\r\n\r\n      // redirect back to /movies\r\n      this.props.history.replace(\"/movies\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Movie</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderFormInput(\"name\", \"Title\", \"Movie Title\", \"text\")}\r\n          {this.renderFormSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderFormInput(\"numberInStock\", \"In Stock\", \"10\", \"number\")}\r\n          {this.renderFormInput(\r\n            \"dailyRentalRate\",\r\n            \"Daily Rental Rate\",\r\n            \"2.5\",\r\n            \"number\"\r\n          )}\r\n          <div className=\"row\">\r\n            <div className=\"col col-sm-1\">{this.renderButton(\"Save\")}</div>\r\n            {this.props.match.params.id === \"new\" ? null : (\r\n              <div className=\"col col-sm-1\">\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/rentals/new\",\r\n                    state: { movie: this.state.data }\r\n                  }}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Rent\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = props => {\r\n  // component need to capitalize so react know its a Component\r\n  const { path, component: Component, ...rest } = props;\r\n  const user = auth.getCurrentUser();\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={props => {\r\n        if (!user)\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport CustomerForm from \"./components/customersForm\";\nimport Rentals from \"./components/rentals\";\nimport RentalForm from \"./components/rentalsForm\";\nimport ReturnForm from \"./components/returnsForm\";\nimport NavBar from \"./components/navbar\";\nimport NotFound from \"./components/notFound\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport MovieForm from \"./components/moviesForm\";\nimport auth from \"./services/authService\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    if (user) {\n      this.setState({ user });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar user={user} />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <ProtectedRoute path=\"/rentals/new\" component={RentalForm} />\n            <Route exact path=\"/rentals\" component={Rentals} />\n            <ProtectedRoute path=\"/returns\" component={ReturnForm} />\n            <ProtectedRoute path=\"/customers\" component={CustomerForm} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}